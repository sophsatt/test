mtext("A nice-looking paragraph! Now this is what I call good advice!")
dev.off()
pdf("test.pdf", height=13.7, paper="special")
plot.new()
text(read.table("../sleuth/p-values_all_transcripts.csv"))
mtext("A nice-looking paragraph! Now this is what I call good advice!")
dev.off()
pdf("test.pdf", height=13.7, paper="special")
plot.new()
mtext(read.table("../sleuth/p-values_all_transcripts.csv"))
mtext("A nice-looking paragraph! Now this is what I call good advice!")
dev.off()
pdf("test.pdf", height=13.7, paper="special")
par(mfrow=c(1,2), oma=c(0,0,3,0),cex=0.5)
plot.new()
mtext(read.table("../sleuth/p-values_all_transcripts.csv"))
mtext("A nice-looking paragraph! Now this is what I call good advice!")
dev.off()
pdf("test.pdf", height=13.7, paper="special")
par(mfrow=c(1,2), oma=c(0,0,3,0),cex=0.5)
plot.new()
mtext(print(read.table("../sleuth/p-values_all_transcripts.csv")))
mtext("A nice-looking paragraph! Now this is what I call good advice!")
dev.off()
pdf("test.pdf", height=13.7, paper="special")
par(mfrow=c(1,2), oma=c(0,0,3,0),cex=0.5)
plot.new()
while(length(line <- readLines("../sleuth/p-values_all_transcripts.csv", 1)) > 0) {
mtext(line, "\n")
}
pdf("test.pdf", height=13.7, paper="special")
par(mfrow=c(1,2), oma=c(0,0,3,0),cex=0.5)
plot.new()
tx <- file("../sleuth/p-values_all_transcripts.csv", "r")
while(length(line <- readLines(tx, 1)) > 0) {
mtext(line, "\n")
}
mtext("A nice-looking paragraph! Now this is what I call good advice!")
dev.off()
pdf("test.pdf", height=13.7, paper="special")
par(mfrow=c(1,2), oma=c(0,0,3,0),cex=0.5)
plot.new()
tx <- file("../sleuth/p-values_all_transcripts.csv", "r")
while(length(line <- readLines(tx, 1)) > 0) {
text(line, "\n")
}
mtext("A nice-looking paragraph! Now this is what I call good advice!")
dev.off()
library(rsvg)
library(png)
library(grid)
library(gridExtra)
#####################################################################################
################### NUR ZUM TESTEN: Erzeugen von Test-svg-Dateien ###################
x <- rnorm(10000)
cols <- c("red", "blue", "green", "yellow")
for (i in seq(along=cols)){
svg(filename = gsub(" ", "", paste(as.character(i),".svg")))
par(bg = cols[i])
plot(x)
dev.off()
}
#####################################################################################
#####################################################################################
svg_files <- unlist(list.files(getwd(), pattern = ".*\\.svg$"))
pdf("test.pdf")
plot.new()
print(svg_files)
dev.off()
pdf("test.pdf")
plot.new(svg_files)
dev.off()
### Test-svg-Dateien entfernen
### Eingabepfade und Speicherort muessen noch angepasst werden
#librsvg2-dev         #Installation from source on Linux or OSX
#librsvg2-devel       #On Fedora, CentOS or RHEL
#librsvg              #On OS-X
#install.packages("rsvg")  #Installation on Windows
#install.packages("png")
#install.packages("grid")
#install.packages("gridExtra")
library(rsvg)
library(png)
library(grid)
library(gridExtra)
#####################################################################################
################### NUR ZUM TESTEN: Erzeugen von Test-svg-Dateien ###################
#x <- rnorm(10000)
#cols <- c("red", "blue", "green", "yellow")
#for (i in seq(along=cols)){
#  svg(filename = gsub(" ", "", paste(as.character(i),".svg")))
#  par(bg = cols[i])
#  plot(x)
#  dev.off()
#}
#####################################################################################
#####################################################################################
path <- "../plots"
#path <- snakemake@input[["plots"]]
svg_files <- unlist(list.files(path, pattern = ".*\\.svg$"))
plots_png <- lapply (1:length(svg_files), function(i){
out_file <- gsub(" ","", paste(strsplit(svg_files[i], "\\.")[[1]][1], ".png"))
rsvg_png(svg_files[i], out_file)
})
png_files <- unlist(list.files(getwd(), pattern = ".*\\.png$"))
pdf("../plots/rna-seq_plots.pdf")
#pdf(file=snakemake@output[[1]])
for (i in seq(along=png_files)){
im <- rasterGrob(readPNG(png_files[i], native = FALSE), interpolate = FALSE)
do.call(grid.arrange, c(list(im), ncol = 1))
}
dev.off()
#x <- "test"
#pdf("test.pdf")#,width=5,height=5)
#plot.new()
#plot(NA, xlim=c(0,5), ylim=c(0,5), bty='n',
#     xaxt='n', yaxt='n', xlab='', ylab='')
#text(x, pos = 1)
#cat(x)
#dev.off()
#pdf("test.pdf", height=13.7, paper="special")
#par(mfrow=c(1,2), oma=c(0,0,3,0),cex=0.5)
#plot.new()
#tx <- file("../sleuth/p-values_all_transcripts.csv", "r")
#while(length(line <- readLines(tx, 1)) > 0) {
#  text(line, "\n")
#}
#mtext("A nice-looking paragraph! Now this is what I call good advice!")
#dev.off()
delete_png <- file.remove(png_files)
install.packages("rsvg")  #Installation on Windows
install.packages("png")
install.packages("grid")
install.packages("gridExtra")
install.packages("grid")
library(rsvg)
library(png)
library(grid)
library(gridExtra)
install.packages("librsvg")  #Installation on Windows
install.packages("rsvg")
library(rsvg)
install.packages("rsvg")
install.packages("librsvg")  #Installation on Windows
library(rsvg)
library(librsvg)
library(png)
library(grid)
library(gridExtra)
#####################################################################################
################### NUR ZUM TESTEN: Erzeugen von Test-svg-Dateien ###################
#x <- rnorm(10000)
#cols <- c("red", "blue", "green", "yellow")
#for (i in seq(along=cols)){
#  svg(filename = gsub(" ", "", paste(as.character(i),".svg")))
#  par(bg = cols[i])
#  plot(x)
#  dev.off()
#}
#####################################################################################
#####################################################################################
path <- "../plots"
#path <- snakemake@input[["plots"]]
svg_files <- unlist(list.files(path, pattern = ".*\\.svg$"))
plots_png <- lapply (1:length(svg_files), function(i){
out_file <- gsub(" ","", paste(strsplit(svg_files[i], "\\.")[[1]][1], ".png"))
rsvg_png(svg_files[i], out_file)
})
png_files <- unlist(list.files(getwd(), pattern = ".*\\.png$"))
pdf("../plots/rna-seq_plots.pdf")
#pdf(file=snakemake@output[[1]])
for (i in seq(along=png_files)){
im <- rasterGrob(readPNG(png_files[i], native = FALSE), interpolate = FALSE)
do.call(grid.arrange, c(list(im), ncol = 1))
}
dev.off()
#x <- "test"
#pdf("test.pdf")#,width=5,height=5)
#plot.new()
#plot(NA, xlim=c(0,5), ylim=c(0,5), bty='n',
#     xaxt='n', yaxt='n', xlab='', ylab='')
#text(x, pos = 1)
#cat(x)
#dev.off()
#pdf("test.pdf", height=13.7, paper="special")
#par(mfrow=c(1,2), oma=c(0,0,3,0),cex=0.5)
#plot.new()
#tx <- file("../sleuth/p-values_all_transcripts.csv", "r")
#while(length(line <- readLines(tx, 1)) > 0) {
#  text(line, "\n")
#}
#mtext("A nice-looking paragraph! Now this is what I call good advice!")
#dev.off()
delete_png <- file.remove(png_files)
### Test-svg-Dateien entfernen
### Eingabepfade und Speicherort muessen noch angepasst werden
#librsvg2-dev         #Installation from source on Linux or OSX
#librsvg2-devel       #On Fedora, CentOS or RHEL
#librsvg              #On OS-X
#install.packages("rsvg")  #Installation on Windows
#install.packages("png")
#install.packages("grid")
#install.packages("gridExtra")
library(rsvg)
library(png)
library(grid)
library(gridExtra)
#####################################################################################
################### NUR ZUM TESTEN: Erzeugen von Test-svg-Dateien ###################
#x <- rnorm(10000)
#cols <- c("red", "blue", "green", "yellow")
#for (i in seq(along=cols)){
#  svg(filename = gsub(" ", "", paste(as.character(i),".svg")))
#  par(bg = cols[i])
#  plot(x)
#  dev.off()
#}
#####################################################################################
#####################################################################################
path <- "../plots"
#path <- snakemake@input[["plots"]]
svg_files <- unlist(list.files(path, pattern = ".*\\.svg$"))
plots_png <- lapply (1:length(svg_files), function(i){
out_file <- gsub(" ","", paste(strsplit(svg_files[i], "\\.")[[1]][1], ".png"))
rsvg_png(svg_files[i], out_file)
})
png_files <- unlist(list.files(getwd(), pattern = ".*\\.png$"))
pdf("../plots/rna-seq_plots.pdf")
#pdf(file=snakemake@output[[1]])
for (i in seq(along=png_files)){
im <- rasterGrob(readPNG(png_files[i], native = FALSE), interpolate = FALSE)
do.call(grid.arrange, c(list(im), ncol = 1))
}
dev.off()
#x <- "test"
#pdf("test.pdf")#,width=5,height=5)
#plot.new()
#plot(NA, xlim=c(0,5), ylim=c(0,5), bty='n',
#     xaxt='n', yaxt='n', xlab='', ylab='')
#text(x, pos = 1)
#cat(x)
#dev.off()
#pdf("test.pdf", height=13.7, paper="special")
#par(mfrow=c(1,2), oma=c(0,0,3,0),cex=0.5)
#plot.new()
#tx <- file("../sleuth/p-values_all_transcripts.csv", "r")
#while(length(line <- readLines(tx, 1)) > 0) {
#  text(line, "\n")
#}
#mtext("A nice-looking paragraph! Now this is what I call good advice!")
#dev.off()
delete_png <- file.remove(png_files)
install.packages("rsvg-convert")  #Installation on Windows
install.packages("rsvg")  #Installation on Windows
library(rsvg)
library(librsvg)
install.packages("librsvg")
install.packages("rsvg")  #Installation on Windows
install.packages("librsvg2-dev")
install.packages("librsvg2-devel")
#install.packages("librsvg2-devel")
#install.packages("rsvg")  #Installation on Windows
#install.packages("png")
#install.packages("grid")
#install.packages("gridExtra")
install.packages("convertGraph")
#library(rsvg)
library(convertGraph)
### Test-svg-Dateien entfernen
### Eingabepfade und Speicherort muessen noch angepasst werden
#librsvg2-dev         #Installation from source on Linux or OSX
#librsvg2-devel       #On Fedora, CentOS or RHEL
#librsvg              #On OS-X
#install.packages("librsvg2-devel")
#install.packages("rsvg")  #Installation on Windows
#install.packages("png")
#install.packages("grid")
#install.packages("gridExtra")
install.packages("convertGraph")
#library(rsvg)
library(convertGraph)
library(png)
library(grid)
library(gridExtra)
#####################################################################################
################### NUR ZUM TESTEN: Erzeugen von Test-svg-Dateien ###################
#x <- rnorm(10000)
#cols <- c("red", "blue", "green", "yellow")
#for (i in seq(along=cols)){
#  svg(filename = gsub(" ", "", paste(as.character(i),".svg")))
#  par(bg = cols[i])
#  plot(x)
#  dev.off()
#}
#####################################################################################
#####################################################################################
path <- "../plots"
#path <- snakemake@input[["plots"]]
svg_files <- unlist(list.files(path, pattern = ".*\\.svg$"))
plots_png <- lapply (1:length(svg_files), function(i){
out_file <- gsub(" ","", paste(strsplit(svg_files[i], "\\.")[[1]][1], ".png"))
convertGraph(from = svg_files[i], to = out_file)
})
png_files <- unlist(list.files(getwd(), pattern = ".*\\.png$"))
pdf("../plots/rna-seq_plots.pdf")
#pdf(file=snakemake@output[[1]])
for (i in seq(along=png_files)){
im <- rasterGrob(readPNG(png_files[i], native = FALSE), interpolate = FALSE)
do.call(grid.arrange, c(list(im), ncol = 1))
}
dev.off()
#x <- "test"
#pdf("test.pdf")#,width=5,height=5)
#plot.new()
#plot(NA, xlim=c(0,5), ylim=c(0,5), bty='n',
#     xaxt='n', yaxt='n', xlab='', ylab='')
#text(x, pos = 1)
#cat(x)
#dev.off()
#pdf("test.pdf", height=13.7, paper="special")
#par(mfrow=c(1,2), oma=c(0,0,3,0),cex=0.5)
#plot.new()
#tx <- file("../sleuth/p-values_all_transcripts.csv", "r")
#while(length(line <- readLines(tx, 1)) > 0) {
#  text(line, "\n")
#}
#mtext("A nice-looking paragraph! Now this is what I call good advice!")
#dev.off()
delete_png <- file.remove(png_files)
### Test-svg-Dateien entfernen
### Eingabepfade und Speicherort muessen noch angepasst werden
#librsvg2-dev         #Installation from source on Linux or OSX
#librsvg2-devel       #On Fedora, CentOS or RHEL
#librsvg              #On OS-X
#install.packages("librsvg2-devel")
#install.packages("rsvg")  #Installation on Windows
#install.packages("png")
#install.packages("grid")
#install.packages("gridExtra")
#install.packages("convertGraph")
#library(rsvg)
library(convertGraph)
library(png)
library(grid)
library(gridExtra)
#####################################################################################
################### NUR ZUM TESTEN: Erzeugen von Test-svg-Dateien ###################
#x <- rnorm(10000)
#cols <- c("red", "blue", "green", "yellow")
#for (i in seq(along=cols)){
#  svg(filename = gsub(" ", "", paste(as.character(i),".svg")))
#  par(bg = cols[i])
#  plot(x)
#  dev.off()
#}
#####################################################################################
#####################################################################################
path <- "../plots"
#path <- snakemake@input[["plots"]]
svg_files <- unlist(list.files(path, pattern = ".*\\.svg$"))
plots_png <- lapply (1:length(svg_files), function(i){
out_file <- gsub(" ","", paste(strsplit(svg_files[i], "\\.")[[1]][1], ".png"))
convertGraph(from = svg_files[i], to = out_file)
})
png_files <- unlist(list.files(getwd(), pattern = ".*\\.png$"))
pdf("../plots/rna-seq_plots.pdf")
#pdf(file=snakemake@output[[1]])
for (i in seq(along=png_files)){
im <- rasterGrob(readPNG(png_files[i], native = FALSE), interpolate = FALSE)
do.call(grid.arrange, c(list(im), ncol = 1))
}
dev.off()
#x <- "test"
#pdf("test.pdf")#,width=5,height=5)
#plot.new()
#plot(NA, xlim=c(0,5), ylim=c(0,5), bty='n',
#     xaxt='n', yaxt='n', xlab='', ylab='')
#text(x, pos = 1)
#cat(x)
#dev.off()
#pdf("test.pdf", height=13.7, paper="special")
#par(mfrow=c(1,2), oma=c(0,0,3,0),cex=0.5)
#plot.new()
#tx <- file("../sleuth/p-values_all_transcripts.csv", "r")
#while(length(line <- readLines(tx, 1)) > 0) {
#  text(line, "\n")
#}
#mtext("A nice-looking paragraph! Now this is what I call good advice!")
#dev.off()
delete_png <- file.remove(png_files)
library(convertGraph)
library(png)
library(grid)
library(gridExtra)
#####################################################################################
################### NUR ZUM TESTEN: Erzeugen von Test-svg-Dateien ###################
#x <- rnorm(10000)
#cols <- c("red", "blue", "green", "yellow")
#for (i in seq(along=cols)){
#  svg(filename = gsub(" ", "", paste(as.character(i),".svg")))
#  par(bg = cols[i])
#  plot(x)
#  dev.off()
#}
#####################################################################################
#####################################################################################
path <- "../plots"
#path <- snakemake@input[["plots"]]
svg_files <- unlist(list.files(path, pattern = ".*\\.svg$"))
plots_png <- lapply (1:length(svg_files), function(i){
out_file <- gsub(" ","", paste(strsplit(svg_files[i], "\\.")[[1]][1], ".png"))
convertGraph(from = svg_files[i], to = out_file)
})
### Test-svg-Dateien entfernen
### Eingabepfade und Speicherort muessen noch angepasst werden
#librsvg2-dev         #Installation from source on Linux or OSX
#librsvg2-devel       #On Fedora, CentOS or RHEL
#librsvg              #On OS-X
#install.packages("librsvg2-devel")
#install.packages("rsvg")  #Installation on Windows
#install.packages("png")
#install.packages("grid")
#install.packages("gridExtra")
#install.packages("convertGraph")
#library(rsvg)
library(convertGraph)
library(png)
library(grid)
library(gridExtra)
#####################################################################################
################### NUR ZUM TESTEN: Erzeugen von Test-svg-Dateien ###################
#x <- rnorm(10000)
#cols <- c("red", "blue", "green", "yellow")
#for (i in seq(along=cols)){
#  svg(filename = gsub(" ", "", paste(as.character(i),".svg")))
#  par(bg = cols[i])
#  plot(x)
#  dev.off()
#}
#####################################################################################
#####################################################################################
path <- "../plots"
#path <- snakemake@input[["plots"]]
svg_files <- unlist(list.files(path, pattern = ".*\\.svg$"))
plots_png <- lapply (1:length(svg_files), function(i){
out_file <- gsub(" ","", paste(strsplit(svg_files[i], "\\.")[[1]][1], ".png"))
convertGraph(from = svg_files[i], to = out_file, path = NULL)
})
#install.packages("librsvg2-devel")
#install.packages("rsvg")  #Installation on Windows
#install.packages("png")
#install.packages("grid")
#install.packages("gridExtra")
#install.packages("convertGraph")
install.packages("magick")
install.packages("magick")
#library(rsvg)
library(magick)
#install.packages("librsvg2-devel")
#install.packages("rsvg")  #Installation on Windows
#install.packages("png")
#install.packages("grid")
#install.packages("gridExtra")
#install.packages("convertGraph")
install.packages("libmagick")
#install.packages("librsvg2-devel")
#install.packages("rsvg")  #Installation on Windows
#install.packages("png")
#install.packages("grid")
#install.packages("gridExtra")
#install.packages("convertGraph")
install.packages("libmagick++-dev")
install.packages("librsvg2")
install.packages("rsvg")  #Installation on Windows
install.packages("RSvgDevice")
install.packages("rsvg")  #Installation on Windows
library(RSvgDevice)
library(rsvg)
library(RSvgDevice)
#library(libmagick)
library(convertGraph)
library(png)
library(grid)
library(gridExtra)
#####################################################################################
################### NUR ZUM TESTEN: Erzeugen von Test-svg-Dateien ###################
#x <- rnorm(10000)
#cols <- c("red", "blue", "green", "yellow")
#for (i in seq(along=cols)){
#  svg(filename = gsub(" ", "", paste(as.character(i),".svg")))
#  par(bg = cols[i])
#  plot(x)
#  dev.off()
#}
#####################################################################################
#####################################################################################
path <- "../plots"
#path <- snakemake@input[["plots"]]
svg_files <- unlist(list.files(path, pattern = ".*\\.svg$"))
plots_png <- lapply (1:length(svg_files), function(i){
out_file <- gsub(" ","", paste(strsplit(svg_files[i], "\\.")[[1]][1], ".png"))
convertGraph(from = svg_files[i], to = out_file, path = NULL)
})
png_files <- unlist(list.files(getwd(), pattern = ".*\\.png$"))
#library(rsvg)
#library(convertGraph)
library(svglite)
install.packages("svglite")
library(svglite)
library(rsvg)
#install.packages("librsvg2-devel")
install.packages("rsvg")  #Installation on Windows
